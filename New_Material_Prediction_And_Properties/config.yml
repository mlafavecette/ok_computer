```yaml
Job:
    run_mode: "Training"  # {Training, Predict, CV, Hyperparameter, Ensemble, Analysis}

    Training:
        job_name: "matdeep_train"
        reprocess: false
        model: "CGCNN"  # Select from available models below
        load_model: false
        save_model: true
        model_path: "saved_models/model"
        write_output: true
        distributed: true
        mixed_precision: true
        seed: 42

    Predict:
        job_name: "matdeep_predict"
        reprocess: false
        model_path: "saved_models/model"
        write_output: true
        batch_size: 32

    CV:
        job_name: "matdeep_cv"
        reprocess: false
        model: "CGCNN"
        cv_folds: 5
        stratified: true
        parallel: true
        seed: 42

Processing:
    dataset_type: "inmemory"
    data_path: "data/"
    target_path: "targets.csv"
    processed_path: "processed"
    file_name: "structure.cif"
    dictionary_source: "default"
    dictionary_path: "atom_dict.json"
    data_format: "json"
    verbose: true

    # Graph parameters
    graph_max_radius: 8.0
    graph_max_neighbors: 12
    voronoi: false
    edge_features: true
    graph_edge_length: 50

    # Descriptors
    SOAP_descriptor: false
    SOAP_rcut: 8.0
    SOAP_nmax: 6
    SOAP_lmax: 4
    SOAP_sigma: 0.3

    SM_descriptor: false

Training:
    target_index: 0
    loss: "mae"
    train_ratio: 0.8
    val_ratio: 0.1
    test_ratio: 0.1
    verbosity: 5

Models:
    CGCNN:
        model: "CGCNN"
        dim1: 100
        dim2: 150
        pre_fc_count: 1
        gc_count: 4
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.002
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    SUPER_CGCNN:
        model: "SUPER_CGCNN"
        dim1: 100
        dim2: 150
        pre_fc_count: 1
        gc_count: 10
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.002
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    GATGNN:
        model: "GATGNN"
        dim1: 64
        dim2: 150
        pre_fc_count: 1
        gc_count: 5
        post_fc_count: 0
        pool: "global_add_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "softplus"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    DEEP_GATGNN:
        model: "DEEP_GATGNN"
        dim1: 64
        dim2: 150
        pre_fc_count: 1
        gc_count: 5
        post_fc_count: 0
        pool: "global_add_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "softplus"
        dropout_rate: 0.0
        epochs: 500
        lr: 0.005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    MPNN:
        model: "MPNN"
        dim1: 100
        dim2: 100
        dim3: 100
        pre_fc_count: 1
        gc_count: 4
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.001
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    SUPER_MPNN:
        model: "SUPER_MPNN"
        dim1: 100
        dim2: 100
        dim3: 100
        pre_fc_count: 1
        gc_count: 10
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.001
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    SchNet:
        model: "SchNet"
        dim1: 100
        dim2: 100
        dim3: 150
        cutoff: 8
        pre_fc_count: 1
        gc_count: 4
        post_fc_count: 3
        pool: "global_max_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.0005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    SUPER_SchNet:
        model: "SUPER_SchNet"
        dim1: 100
        dim2: 100
        dim3: 150
        cutoff: 8
        pre_fc_count: 1
        gc_count: 10
        post_fc_count: 3
        pool: "global_max_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.0005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    MEGNet:
        model: "MEGNet"
        dim1: 100
        dim2: 100
        dim3: 100
        pre_fc_count: 1
        gc_count: 4
        gc_fc_count: 1
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.0005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

    SUPER_MEGNet:
        model: "SUPER_MEGNet"
        dim1: 100
        dim2: 100
        dim3: 100
        pre_fc_count: 1
        gc_count: 10
        gc_fc_count: 1
        post_fc_count: 3
        pool: "global_mean_pool"
        pool_order: "early"
        batch_norm: true
        batch_track_stats: true
        act: "relu"
        dropout_rate: 0.0
        epochs: 250
        lr: 0.0005
        batch_size: 100
        optimizer: "AdamW"
        optimizer_args: {}
        scheduler: "ReduceLROnPlateau"
        scheduler_args:
            mode: "min"
            factor: 0.8
            patience: 10
            min_lr: 0.00001
            threshold: 0.0002

Hardware:
    gpu_memory_limit: 0.9
    allow_memory_growth: true
    mixed_precision: true
    xla_acceleration: true

    distribution:
        strategy: "mirrored"
        num_workers: 4
        communication_options:
            implementation: "ring"
            compression: true

    performance:
        inter_op_parallelism: 2
        intra_op_parallelism: 4
        soft_placement: true
        gpu_per_process: 1.0

Hyperparameter_Search:
    search_space:
        CGCNN:
            dim1: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
            gc_count: [1, 2, 3, 4, 5, 6, 7, 8, 9]
            lr: [1e-4, 5e-4, 1e-3, 5e-3, 1e-2]
            batch_size: [32, 64, 128, 256]
        # Similar search spaces for other models...

    optimization:
        method: "bayesian"
        max_trials: 50
        num_initial_points: 10
        acquisition_function: "expected_improvement"
        exploration_weight: 0.1
